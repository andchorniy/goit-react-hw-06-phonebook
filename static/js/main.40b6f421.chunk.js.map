{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Contact/Contact.module.css","redux/filter/filter-action.js","redux/filter/filter-reducer.js","redux/contacts/contacts-action.js","redux/contacts/contacts-reducer.js","redux/store.js","components/ContactForm/ContactForm.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","changeFilter","createAction","filterReducer","createReducer","state","payload","addContact","value","id","uuidv4","name","number","deleteContact","itemReducer","filter","contact","contactsReducer","combineReducers","items","contactPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","contacts","persistReducer","devTools","process","persistor","persistStore","INITIAL_STATE","ContactForm","handleInputChange","e","currentTarget","setState","preventDefault","props","find","item","alert","onSubmit","this","className","style","form","label","input","type","pattern","title","required","onChange","btn","Component","connect","dispatch","deleteHandler","onClick","contactsList","query","toLowerCase","includes","list","map","handleChange","target","trim","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.40b6f421.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1IlVz\",\"item\":\"ContactList_item__1SiM9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1alFx\",\"input\":\"Filter_input__Xk4WB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Contact_btn__2oi5w\"};","import { createAction } from \"@reduxjs/toolkit\";\r\nconst changeFilter = createAction(\"phonebook/changeFilter\");\r\n\r\nexport default changeFilter;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport changeFilter from \"./filter-action\";\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [changeFilter]: (state, { payload }) => payload,\r\n});\r\n\r\nexport default filterReducer;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\"phonebook/AddContact\", (value) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name: value.name,\r\n    number: value.number,\r\n  },\r\n}));\r\n\r\nexport const deleteContact = createAction(\"phonebook/DeleteContact\");\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport filterReducer from \"../filter/filter-reducer\";\r\nimport { addContact, deleteContact } from \"./contacts-action\";\r\n\r\nconst itemReducer = createReducer([], {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\n\r\nconst contactPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\nconst middleware = getDefaultMiddleware({\r\n  serializableCheck: {\r\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n  },\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactPersistConfig, contactsReducer),\r\n  },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n  middleware,\r\n});\r\nexport const persistor = persistStore(store);\r\n","import { Component } from \"react\";\r\nimport style from './ContactForm.module.css'\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../../redux/contacts/contacts-action\";\r\n\r\nconst INITIAL_STATE ={\r\n    name: '',\r\n    number: '',\r\n}\r\n\r\nclass ContactForm extends Component   {\r\n    state = {\r\n        ...INITIAL_STATE\r\n    }\r\n    handleInputChange = (e) => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({ [name]: value });\r\n    };\r\n    addContact = (e) => {\r\n        e.preventDefault();\r\n        if(this.props.contacts.items.find(item=> item.name === this.state.name)){\r\n           alert(`${this.state.name} is already in contacts `)\r\n           return\r\n        }\r\n          this.props.onSubmit(this.state)\r\n          this.setState({\r\n            ...INITIAL_STATE\r\n        })\r\n      }\r\n    \r\n    render(){\r\n        const {name, number} = this.state\r\n        return (\r\n\r\n                <form onSubmit={this.addContact} className={style.form} >\r\n                    <label  className={style.label}>\r\n                        Name\r\n                        <input\r\n                        className={style.input}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        onChange={this.handleInputChange}\r\n                        />\r\n                    </label>\r\n                    <label className={style.label}>\r\n                        Number\r\n                        <input\r\n                        className={style.input}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={number}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        onChange={this.handleInputChange}\r\n                        />\r\n\r\n                    </label>\r\n                    <button type=\"submit\" className={style.btn}>Add contact</button>\r\n                </form>\r\n        \r\n        )}\r\n    \r\n};\r\nconst mapStateToProps = state => state\r\nconst mapDispatchToProps = dispatch => ({\r\n    onSubmit: (value)=> {\r\n         return dispatch(addContact(value))\r\n    }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import\tstyle from './Contact.module.css'\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/contacts/contacts-action\";\r\n\r\nconst Contact = ({name, number, id, deleteHandler}) => {\r\n    return (\r\n        <>\r\n            {name} {number}\r\n            <button className={style.btn} onClick={deleteHandler} id={id}>Delete</button>\r\n        </>\r\n    );\r\n};\r\nconst  mapDispatchToProps = dispatch => ({\r\n    deleteHandler: (e)=> dispatch(deleteContact(e.currentTarget.id))\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps )(Contact);","import PropTypes from 'prop-types';\r\nimport style from './ContactList.module.css'\r\nimport { connect } from \"react-redux\";\r\nimport Contact from '../Contact'\r\nconst ContactList = ({contacts,}) => {\r\n    return (\r\n            <ul className={style.list}>\r\n            {contacts.map((contact)=>{\r\n                return <li className={style.item} key={contact.id}>\r\n                    <Contact name={contact.name} number={contact.number} id={contact.id} />\r\n                    </li>\r\n            })}\r\n            </ul>\r\n    );\r\n};\r\nconst filterContacts= (contactsList, query) => {\r\n return contactsList.filter(({name}) => name.toLowerCase().includes(query.toLowerCase()))\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    contacts: filterContacts(state.contacts.items, state.contacts.filter)\r\n  });\r\n\r\nContactList.propTypes={\r\n    contacts: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired\r\n    })).isRequired,\r\n}\r\nexport default connect(mapStateToProps)(ContactList);","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport style from './Filter.module.css'\r\nimport changeFilter from '../../redux/filter/filter-action'\r\nconst Filter = ({filter, handleChange}) => {\r\n    return (\r\n        <div>\r\n            <label className={style.label}>\r\n                Find contacts by name\r\n                <input className={style.input} type=\"text\" name=\"filter\" value={filter} onChange={handleChange}/>\r\n            </label>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps=(state)=>({\r\n    filter: state.filter\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    handleChange: (e)=> dispatch(changeFilter(e.target.value.trim()))\r\n})\r\nFilter.propTypes={\r\n    handleChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import \"./App.css\";\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport ContactList from \"./components/ContactList\";\r\nimport Filter from \"./components/Filter\";\r\nimport {} from \"./redux/contacts/contacts-action\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { store, persistor } from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={<h1>Loaging...</h1>} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__14VYh\",\"label\":\"ContactForm_label__Sykff\",\"input\":\"ContactForm_input__3NgEj\",\"btn\":\"ContactForm_btn__15WXy\"};"],"sourceRoot":""}